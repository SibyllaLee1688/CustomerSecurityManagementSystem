<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
           	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	default-lazy-init="true">
	
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/> 
	
	<bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator" />

	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		destroy-method="destroy">
		<property name="dataSource" ref="hikariCPDataSource" />
		<property name="configLocation">
		    <value> classpath:hibernate.cfg.xml </value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${project.hibernateDialect}</prop>
				<!-- Booleans can be easily used in expressions by 
				     declaring HQL query substitutions in Hibernate configuration -->
				<prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- http://www.tutorialspoint.com/hibernate/hibernate_caching.htm -->
				<!-- hibernate.cache.use_query_cache "true" -->
				<!-- Hibernate Search index directory
				<prop key="hibernate.search.default.indexBase">${app.search.index.basedir}</prop> -->
			</props>
		</property>
	</bean> 

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Activates scanning of @Autowired -->
	<context:annotation-config />

	<!-- Activates scanning of @Repository -->
	<context:component-scan
		base-package="com.elulian.CustomerSecurityManagementSystem.dao.impl.hibernate" />

	<!-- It is not necessary to configure a Spring loadTimeWeaver when using 
		OpenJPA build time enhancement. The following warning message will be logged 
		by OpenJPA when creating an EntityManagerFactory but it can be safely ignored. 
		WARN [main] while registering a ClassTransformer with PersistenceUnitInfo: 
		name 'PuName', root URL [file:/.../]. The error has been consumed. To see 
		it, set your openjpa.Runtime log level to TRACE. Load-time class transformation 
		will not be available. -->

	<!-- mysqlOpenJPA mysqlHibernateJPA -->
	<!-- openjpaVendorAdapter hibernateJpaVendorAdapter -->
	<!-- Specify the JpaVendorAdapter implementation for the desired JPA provider, if any. 
	        This will initialize appropriate defaults for the given provider, 
	        such as persistence provider class and JpaDialect, unless locally overridden in this FactoryBean -->
	<!-- <bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="mysqlOpenJPA" /> 
		<property name="dataSource" ref="hikariCPDataSource" />
		
		<property name="jpaVendorAdapter" ref="openjpaVendorAdapter" /> 
			
			JPA properties would usually be specified in the persistence.xml file; 
			alternatively, the properties can be specified directly to the entity manager factory bean:
			 <property name="jpaProperties">
            <value>
                hibernate.cache.use_second_level_cache = true
                hibernate.cache.region.factory_class = org.hibernate.cache.ehcache.EhCacheRegionFactory
                hibernate.cache.use_query_cache = true
                hibernate.generate_statistics = true
            </value>
         </property>
	</bean>
	
	<bean id="openjpaVendorAdapter" class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter">
                <property name="showSql" value="false" />
                <property name="generateDdl" value="true" />
                <property name="databasePlatform"
                    value="org.apache.openjpa.jdbc.sql.MySQLDictionary" />
            </bean>
            

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="hikariCPDataSource" />
	</bean> -->
	
	<!--     <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false" />
                <property name="generateDdl" value="true" />
                <property name="databasePlatform"
                    value="org.hibernate.dialect.MySQL5Dialect" />
            </bean> -->

</beans>
