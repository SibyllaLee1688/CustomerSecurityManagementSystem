<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
              http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
              http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
              http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">
           
<!-- 
    <context:annotation-config/>

    Activates scanning of @Service
    <context:component-scan base-package="com.elulian.CustomerSecurityManagementSystem.dao"/>
 -->
	<beans:bean name="bcryptEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<authentication-manager>
		<authentication-provider user-service-ref="userInfoService">
			<password-encoder ref="bcryptEncoder" />
		</authentication-provider>
	</authentication-manager>

	<global-method-security jsr250-annotations="enabled" />

<!-- <beans:bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="persistenceUnitName" value="mysql" />
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="jpaVendorAdapter">
            <beans:bean class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter">
                <beans:property name="showSql" value="false" />
                <beans:property name="generateDdl" value="true" />
                <beans:property name="databasePlatform"
                    value="org.apache.openjpa.jdbc.sql.MySQLDictionary" />
            </beans:bean>
        </beans:property>

        <property name="loadTimeWeaver"> <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" 
            /> </property>
    </beans:bean>
    
        <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory" />
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
    
    
     <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
       
        <beans:property name="driverClassName" value="${project.jdbc.driverClassName}" />
        <beans:property name="url"
            value="${project.jdbc.url}" />
        <beans:property name="username" value="${project.jdbc.username}" />
        <beans:property name="password" value="${project.jdbc.password}" />
        <beans:property name="maxActive" value="100" />
        <beans:property name="maxWait" value="1000" />
        <beans:property name="poolPreparedStatements" value="true" />
        <beans:property name="defaultAutoCommit" value="true" />
        <beans:property name="validationQuery" value="SELECT 1+1" />
        <beans:property name="testOnBorrow" value="true" />
    </beans:bean> -->

	<!-- http://lengyun3566.iteye.com/blog/1170112 we should follow jsr250 to 
		define service access security <global-method-security> <protect-pointcut 
		expression="execution(* *..service.UserManager.getUsers(..))" access="ROLE_ADMIN"/> 
		<protect-pointcut expression="execution(* *..service.UserManager.removeUser(..))" 
		access="ROLE_ADMIN"/> </global-method-security> -->
</beans:beans>
