<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.elulian</groupId>
	<artifactId>CustomerSecurityManagementSystem</artifactId>
	<packaging>pom</packaging>
	<version>0.1-SNAPSHOT</version>
	<name>Cloud Lu SSH/SSO Application</name>
	<url>https://github.com/elulian/CustomerSecurityManagementSystem</url>

	<prerequisites>
		<maven>3.0.5</maven>
	</prerequisites>

	<developers>
		<developer>
			<email>luliang1984@gmail.com</email>
			<name>Cloud Lu</name>
			<url>https://github.com/cloudlu</url>
			<id>cloudlu</id>
		</developer>
	</developers>

	<!-- use maven repo here if required, can also set in setting.xml <repositories> 
		</repositories> -->

	<scm>
		<connection>scm:git:https://github.com/elulian/CustomerSecurityManagementSystem.git</connection>
		<developerConnection>scm:git:https://github.com/elulian/CustomerSecurityManagementSystem.git</developerConnection>
		<url>https://github.com/elulian/CustomerSecurityManagementSystem</url>
	</scm>

	<properties>
		<!-- Application settings -->
		<project.copyright.year>2014</project.copyright.year>
		<project.dao.framework>openjpa</project.dao.framework>
		<project.web.framework>struts</project.web.framework>
		<project.db.name>CustomerSecurityManagementSystem</project.db.name>
		<project.web.deployname>/CustomerSecurityManagementSystem</project.web.deployname>
		<!-- java common properties -->
		<project.JavaVersion>1.6</project.JavaVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- jse common properties -->
		<!-- dependency jar -->
		<project.junitVersion>4.11</project.junitVersion>
		<project.jmockVersion>2.6.0-RC2</project.jmockVersion>
		<project.powermock-api-mockitoVersion>1.5.1</project.powermock-api-mockitoVersion>
		<project.powermoc-api-supportkVersion>1.5.2</project.powermoc-api-supportkVersion>
		<project.powermock-module-junit4Version>1.5.1</project.powermock-module-junit4Version>
		<project.mockito-allVersion>1.9.5</project.mockito-allVersion>
		<project.slf4jVersion>1.7.7</project.slf4jVersion>
		<project.log4jVersion>1.2.17</project.log4jVersion>
		<!-- dependency plugin -->
		<project.dependencyPluginVersion>2.8</project.dependencyPluginVersion>
		<project.sitePluginVersion>3.3</project.sitePluginVersion>
		<project.sitePluginSkip>true</project.sitePluginSkip>
		<!-- for can not open zip file in dependency report generation -->
		<project.projectInfoReportsPluginVersion>2.7</project.projectInfoReportsPluginVersion>
		<project.resourcesPluginVersion>2.6</project.resourcesPluginVersion>
		<project.changePluginVersion>2.10</project.changePluginVersion>
		<project.cleanPluginVersion>2.5</project.cleanPluginVersion>
		<project.releasePluginVersion>2.4.2</project.releasePluginVersion>
		<project.compilerPluginVersion>3.1</project.compilerPluginVersion>
		<project.javadocPluginVersion>2.9.1</project.javadocPluginVersion>
		<project.versionsPluginVersion>2.1</project.versionsPluginVersion>
		<project.checkstylePluginVersion>2.12.1</project.checkstylePluginVersion>
		<project.jxrPluginVersion>2.4</project.jxrPluginVersion>
		<project.pmdPluginVersion>3.1</project.pmdPluginVersion>
		<project.surefireReportPluginVersion>2.17</project.surefireReportPluginVersion>
		<project.surefirePluginVersion>2.17</project.surefirePluginVersion>
		<project.findbugsPluginVersion>2.5.2</project.findbugsPluginVersion>
		<project.sonarPluginVersion>0.1</project.sonarPluginVersion>
		<project.cargoPluginVersion>1.4.8</project.cargoPluginVersion>
		<project.jettyPluginVersion>8.1.15.v20140411</project.jettyPluginVersion>
		<project.warPluginVersion>2.4</project.warPluginVersion>
		<project.eclipsePluginVersion>2.9</project.eclipsePluginVersion>
		<!-- change cobertura plugin version back to 2.5.2 to avoid loadCoverageData 
			Error and absent class attribute warning -->
		<project.coberturaPluginVersion>2.5.2</project.coberturaPluginVersion>
		<!-- jee common properties -->
		<project.wtpVersion>2.0</project.wtpVersion>
		<project.servlet-apiVersion>3.0-alpha-1</project.servlet-apiVersion>
		<project.jsp-apiVersion>2.2.1-b03</project.jsp-apiVersion>
		
		<!-- Project dependency versions -->
		<!-- dao -->
		<project.mysqlConnectorVersion>5.1.30</project.mysqlConnectorVersion>
		<project.openjpaPluginVersion>1.2</project.openjpaPluginVersion>
		<project.droolsVersion>6.1.0.Beta3</project.droolsVersion>
		<project.c3p0Version>0.9.1.2</project.c3p0Version>
		<project.commons-dbcpVersion>1.4</project.commons-dbcpVersion>
		<project.hikariCPVersion>1.3.8</project.hikariCPVersion>
        <project.ehcacheVersion>2.6.9</project.ehcacheVersion>
        <project.javassistVersion>3.18.1-GA</project.javassistVersion>
        <!-- 4.3 requires jpa2.1 jee7 -->
		<project.hibernateVersion>4.2.7.Final</project.hibernateVersion>
		<project.openjpaVersion>2.3.0</project.openjpaVersion>
		<!-- rules -->
		<project.slf4j-simpleVersion>1.7.2</project.slf4j-simpleVersion>
        <project.kiePluginVersion>6.1.0.Beta3</project.kiePluginVersion>
		<project.cglib-nodepVersion>3.1</project.cglib-nodepVersion>
		<project.itextVersion>4.2.1</project.itextVersion>
		<project.commons-beanutilsVersion>1.9.2</project.commons-beanutilsVersion>
		<project.commons-configurationVersion>1.10</project.commons-configurationVersion>
		<!-- service -->
		<project.aspectjVersion>1.8.0</project.aspectjVersion>
		<project.springVersion>4.0.5.RELEASE</project.springVersion>
        <project.springSecurityVersion>3.2.4.RELEASE</project.springSecurityVersion>
		<!-- web -->
		<project.groovy-allVersion>2.3.0</project.groovy-allVersion>
		<project.jasperreportsVersion>5.6.0</project.jasperreportsVersion>
		<project.jxlVersion>2.6.12</project.jxlVersion>
		<project.urlrewritefilterVersion>4.0.4</project.urlrewritefilterVersion>
		<!-- <displaytag.version>1.2</displaytag.version> -->
		
		<project.strutsVersion>2.3.16.3</project.strutsVersion>
		
		
		
		<project.poiVersion>3.10-FINAL</project.poiVersion>
		<project.wiserVersion>1.2</project.wiserVersion>
		<!-- WebTest default target -->
		<project.webtest.target>run-all-tests</project.webtest.target>

		<project.cargo.container>tomcat7x</project.cargo.container>
		<project.cargo.container.home>${env.CATALINA_HOME}</project.cargo.container.home>
		<project.cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.33/bin/apache-tomcat-7.0.33.zip</project.cargo.container.url>
		<project.cargo.host>localhost</project.cargo.host>
		<project.cargo.port>8081</project.cargo.port>
		<project.cargo.wait>false</project.cargo.wait>
		<!-- Jetty Cargo settings: <project.cargo.container>jetty6x</project.cargo.container> 
			<project.cargo.container.url>http://dist.codehaus.org/jetty/jetty-6.1.21/jetty-6.1.21.zip</project.cargo.container.url> -->
		<!-- Database settings -->
		<dbunit.dataTypeFactoryName>org.dbunit.ext.mysql.MySqlDataTypeFactory</dbunit.dataTypeFactoryName>
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
		<project.hibernateDialect>org.hibernate.dialect.MySQL5InnoDBDialect</project.hibernateDialect>
		<project.jdbc.groupId>mysql</project.jdbc.groupId>
		<project.jdbc.artifactId>mysql-connector-java</project.jdbc.artifactId>
		<project.jdbcVersion>${project.mysqlConnectorVersion}</project.jdbcVersion>
		<project.jdbc.driverClassName>com.mysql.jdbc.Driver</project.jdbc.driverClassName>
		<project.jdbc.dataSourceClassName>com.mysql.jdbc.jdbc2.optional.MysqlDataSource</project.jdbc.dataSourceClassName>
		<project.jdbc.url>jdbc:mysql://localhost/${project.db.name}?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8&amp;amp;autoReconnect=true</project.jdbc.url>
		<project.jdbc.username>root</project.jdbc.username>
		<project.jdbc.password>root</project.jdbc.password>
	</properties>
	<profiles>
		<profile>
			<id>integration-test</id>
			<!-- <activation> <property> <name>!skipTests</name> </property> </activation> -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>${project.cargoPluginVersion}</version>
						<configuration>
							<wait>${project.cargo.wait}</wait>
							<container>
								<containerId>${project.cargo.container}</containerId>
								<home>${project.cargo.container.home}</home>
								<zipUrlInstaller>
									<url>${project.cargo.container.url}</url>
									<extractDir>${installDir}</extractDir>
								</zipUrlInstaller>
							</container>
							<configuration>
								<home>${project.build.directory}/${project.cargo.container}/container</home>
								<properties>
									<project.cargo.hostname>${project.cargo.host}</project.cargo.hostname>
									<cargo.servlet.port>${project.cargo.port}</cargo.servlet.port>
									<!-- To prevent conflicts with already running instances -->
									<cargo.tomcat.ajp.port>8123</cargo.tomcat.ajp.port>
								</properties>
							</configuration>
						</configuration>
						<executions>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>webtest-maven-plugin</artifactId>
						<version>1.0.0</version>
						<executions>
							<execution>
								<id>webtest-test</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
							<execution>
								<id>webtest-verify</id>
								<phase>verify</phase>
								<goals>
									<goal>verify-result</goal>
								</goals>
							</execution>
							<execution>
								<id>webtest-report-html</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<host>${project.cargo.host}</host>
							<port>${project.cargo.port}</port>
							<sourcedirectory>src/test/resources</sourcedirectory>
							<sourcefile>web-tests.xml</sourcefile>
							<target>${project.webtest.target}</target>
							<basepath>${project.build.finalName}</basepath>
							<resultpath>target/webtest/webtest-results</resultpath>
							<haltonfailure>false</haltonfailure>
							<haltonerror>false</haltonerror>
							<loglevel>fatal</loglevel>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- ================= Production Settings Profile ================= -->
		<!-- Use "-P prod" when you want to use the settings in this profile -->
		<!-- =============================================================== -->
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<!-- Override location of data file for DbUnit to load (doesn't have 
						negative keys) -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<configuration>
							<src>src/main/resources/default-data.xml</src>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- ================= Database Profiles ================= -->
		<profile>
			<id>derby</id>
			<properties>
				<project.hibernateDialect>org.hibernate.dialect.DerbyDialect</project.hibernateDialect>
				<project.jdbc.groupId>org.apache.derby</project.jdbc.groupId>
				<project.jdbc.artifactId>derbyclient</project.jdbc.artifactId>
				<project.jdbcVersion>10.2.2.0</project.jdbcVersion>
				<project.jdbc.driverClassName>org.apache.derby.jdbc.ClientDriver</project.jdbc.driverClassName>
				<project.jdbc.url>jdbc:derby://localhost/${project.db.name};create=true</project.jdbc.url>
				<project.jdbc.username>any</project.jdbc.username>
				<project.jdbc.password>value</project.jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>h2</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.h2.H2DataTypeFactory</dbunit.dataTypeFactoryName>
				<project.hibernateDialect>org.hibernate.dialect.H2Dialect</project.hibernateDialect>
				<project.jdbc.groupId>com.h2database</project.jdbc.groupId>
				<project.jdbc.artifactId>h2</project.jdbc.artifactId>
				<project.jdbcVersion>1.3.170</project.jdbcVersion>
				<project.jdbc.driverClassName>org.h2.Driver</project.jdbc.driverClassName>
				<project.jdbc.url>jdbc:h2:/tmp/${project.db.name};MVCC=TRUE</project.jdbc.url>
				<project.jdbc.username>sa</project.jdbc.username>
			</properties>
		</profile>
		<profile>
			<id>hsqldb</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dbunit.dataTypeFactoryName>
				<project.hibernateDialect>org.hibernate.dialect.HSQLDialect</project.hibernateDialect>
				<project.jdbc.groupId>org.hsqldb</project.jdbc.groupId>
				<project.jdbc.artifactId>hsqldb</project.jdbc.artifactId>
				<project.jdbcVersion>2.2.9</project.jdbcVersion>
				<project.jdbc.driverClassName>org.hsqldb.jdbcDriver</project.jdbc.driverClassName>
				<project.jdbc.url>jdbc:hsqldb:/tmp/${project.db.name};shutdown=true</project.jdbc.url>
				<project.jdbc.username>sa</project.jdbc.username>
			</properties>
		</profile>
		<profile>
			<id>oracle</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.oracle.OracleDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.schema>SYSTEM</dbunit.schema> <!-- Make sure to capitalize the schema name -->
				<project.hibernateDialect>org.hibernate.dialect.Oracle9Dialect</project.hibernateDialect>
				<project.jdbc.groupId>com.oracle</project.jdbc.groupId>
				<project.jdbc.artifactId>ojdbc14</project.jdbc.artifactId>
				<project.jdbcVersion>10.2.0.2.0</project.jdbcVersion>
				<project.jdbc.driverClassName>oracle.jdbc.OracleDriver</project.jdbc.driverClassName>
				<project.jdbc.url>jdbc:oracle:thin:@localhost:1521:XE</project.jdbc.url>
				<project.jdbc.username>system</project.jdbc.username>
				<project.jdbc.password>system</project.jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>postgresql</id>
			<properties>
				<project.hibernateDialect>org.hibernate.dialect.PostgreSQLDialect</project.hibernateDialect>
				<project.jdbc.groupId>postgresql</project.jdbc.groupId>
				<project.jdbc.artifactId>postgresql</project.jdbc.artifactId>
				<project.jdbcVersion>8.1-407.jdbc3</project.jdbcVersion>
				<project.jdbc.driverClassName>org.postgresql.Driver</project.jdbc.driverClassName>
				<project.jdbc.url>jdbc:postgresql://localhost/${project.db.name}</project.jdbc.url>
				<project.jdbc.username>postgres</project.jdbc.username>
				<project.jdbc.password>postgres</project.jdbc.password>
			</properties>
		</profile>
		<profile>
			<!-- You need to enable TCP/IP Connections for SQL Server 2005 after installing. -->
			<!-- http://www.mattwoodward.com/blog/index.cfm?commentID=211 -->
			<id>sqlserver</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.mssql.MsSqlDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.operation.type>MSSQL_CLEAN_INSERT</dbunit.operation.type>
				<project.hibernateDialect>org.hibernate.dialect.SQLServerDialect</project.hibernateDialect>
				<project.jdbc.groupId>net.sourceforge.jtds</project.jdbc.groupId>
				<project.jdbc.artifactId>jtds</project.jdbc.artifactId>
				<project.jdbcVersion>1.2</project.jdbcVersion>
				<project.jdbc.driverClassName>net.sourceforge.jtds.jdbc.Driver</project.jdbc.driverClassName>
				<project.jdbc.url>jdbc:jtds:sqlserver://localhost:3683/${project.db.name}</project.jdbc.url>
				<project.jdbc.username>sa</project.jdbc.username>
				<project.jdbc.password>appfuse</project.jdbc.password>
			</properties>
		</profile>

		<!-- ================= Container Profiles ================= -->
		<profile>
			<id>jboss</id>
			<properties>
				<project.cargo.container>jboss4x</project.cargo.container>
				<project.cargo.container.home>${env.JBOSS_HOME}</project.cargo.container.home>
				<project.cargo.container.url>http://easynews.dl.sourceforge.net/sourceforge/jboss/jboss-4.0.5.GA.zip</project.cargo.container.url>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${project.log4jVersion}</version>
			</dependency>
			<dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${project.slf4jVersion}</version>
            </dependency>
			<dependency>
			    <groupId>org.slf4j</groupId>
			    <artifactId>slf4j-log4j12</artifactId>
			    <version>${project.slf4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>jsr250-api</artifactId>
				<version>1.0</version>
			</dependency>
			<!-- for openjpa -->
			<dependency>
				<groupId>org.apache.openjpa</groupId>
				<artifactId>openjpa</artifactId>
				<version>${project.openjpaVersion}</version>
			</dependency>
			<!-- for openjpa end -->
			<!-- for database source -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${project.commons-dbcpVersion}</version>
			</dependency>
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${project.c3p0Version}</version>
			</dependency>
			<dependency>
		        <groupId>com.zaxxer</groupId>
		        <artifactId>HikariCP</artifactId>
		        <version>${project.hikariCPVersion}</version>
		        <scope>compile</scope>
		    </dependency>
			<!-- for database source end -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${project.cglib-nodepVersion}</version>
			</dependency>
			<dependency>
				<groupId>${project.jdbc.groupId}</groupId>
				<artifactId>${project.jdbc.artifactId}</artifactId>
				<version>${project.jdbcVersion}</version>
			</dependency>
			<!-- for hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${project.hibernateVersion}</version>
			</dependency>
			<dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${project.hibernateVersion}</version>
            </dependency>
			<!-- Use Javassist as Hibernate's bytecode provider -->
	        <dependency>
	            <groupId>org.javassist</groupId>
	            <artifactId>javassist</artifactId>
	            <version>${project.javassistVersion}</version>
	        </dependency>
	        
	        <!-- Enable EhCache support -->
	        <dependency>
	            <groupId>org.hibernate</groupId>
	            <artifactId>hibernate-ehcache</artifactId>
	            <version>${project.hibernateVersion}</version>
	        </dependency>
	        <!-- Upgrade version of EhCache used -->
	        <dependency>
	            <groupId>net.sf.ehcache</groupId>
	            <artifactId>ehcache-core</artifactId>
	            <version>${project.ehcacheVersion}</version>
	        </dependency>
			<!-- for hibernate end -->
			<!-- for rule engine -->
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-core</artifactId>
				<version>${project.droolsVersion}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-compiler</artifactId>
				<version>${project.droolsVersion}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>knowledge-api</artifactId>
				<version>${project.droolsVersion}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-decisiontables</artifactId>
				<version>${project.droolsVersion}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-jsr94</artifactId>
				<version>${project.droolsVersion}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.kie</groupId>
				<artifactId>kie-ci</artifactId>
				<version>${project.droolsVersion}</version>
				<type>jar</type>
			</dependency>
			<!-- for rule engine end -->
			<!-- for spring -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${project.springSecurityVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${project.springSecurityVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${project.springSecurityVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${project.springSecurityVersion}</version>
			</dependency>
			<!-- http://blog.csdn.net/zjh19870703/article/details/7618412 -->
			<!-- Core utilities used by other modules. Define this if you use Spring 
				Utility APIs (org.springframework.core, org.springframework.util) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- Expression Language (depends on spring-core) Define this if you use 
				Spring Expression APIs (org.springframework.expression) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
				this if you use Spring Bean APIs (org.springframework.beans) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
				spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
				spring-beans) This is the central artifact for Spring's Dependency Injection 
				Container and is generally always defined -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- Various Application Context utilities, including EhCache, JavaMail, 
				Quartz, and Freemarker integration Define this if you need any of these integrations -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
				spring-aop, spring-context) Define this if you use Spring Transactions or 
				DAO Exception Hierarchy (org.springframework.transaction, org.springframework.dao) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
				spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc) 
				<dependency> <groupId>org.springframework</groupId> <artifactId>spring-jdbc</artifactId> 
				<version>${org.springframework.version}</version> </dependency> -->
			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
				and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
				Define this if you need ORM (org.springframework.orm) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
				JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
				spring-context) Define this if you need OXM (org.springframework.oxm) <dependency> 
				<groupId>org.springframework</groupId> <artifactId>spring-oxm</artifactId> 
				<version>${org.springframework.version}</version> </dependency> -->
			<!-- Web application development utilities applicable to both Servlet 
				and Portlet Environments (depends on spring-core, spring-beans, spring-context) 
				Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
				web framework with Spring (org.springframework.web) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${project.springVersion}</version>
			</dependency>
			<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
				spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
				Container such as Apache Tomcat (org.springframework.web.servlet) <dependency> 
				<groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> 
				<version>${spring.version}</version> </dependency> -->
			<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
				spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
				Container (org.springframework.web.portlet) <dependency> <groupId>org.springframework</groupId> 
				<artifactId>spring-webmvc-portlet</artifactId> <version>${spring.version}</version> 
				</dependency> -->
			<!-- Support for testing Spring applications with tools such as JUnit 
				and TestNG This artifact is generally always defined with a 'test' scope 
				for the integration testing framework and unit testing stubs -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${project.springVersion}</version>
				<scope>test</scope>
			</dependency>
			<!-- for spring end -->
			<!-- for AspectJ -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${project.aspectjVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjtools</artifactId>
				<version>${project.aspectjVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${project.aspectjVersion}</version>
			</dependency>
			<!-- for AspectJ end -->

			<!-- for struts -->
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-core</artifactId>
				<version>${project.strutsVersion}</version>
				<exclusions>
				    <exclusion>
				        <groupId>javassist</groupId>
                        <artifactId>javassist</artifactId>
				    </exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-convention-plugin</artifactId>
				<version>${project.strutsVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-spring-plugin</artifactId>
				<version>${project.strutsVersion}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-beans</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-context</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-web</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-json-plugin</artifactId>
				<version>${project.strutsVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-sitemesh-plugin</artifactId>
				<version>${project.strutsVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-dojo-plugin</artifactId>
				<version>${project.strutsVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-jfreechart-plugin</artifactId>
				<version>${project.strutsVersion}</version>
			</dependency>
			<!-- <dependency> <groupId>commons-fileupload</groupId> <artifactId>commons-fileupload</artifactId> 
				<version>${commons.fileupload.version}</version> </dependency> <dependency> 
				<groupId>commons-io</groupId> <artifactId>commons-io</artifactId> <version>${commons.io.version}</version> 
				</dependency> -->
			<!-- for struts end -->
			<dependency>
				<groupId>jstl</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
				<scope>runtime</scope>
			</dependency>
			<!-- <dependency> <groupId>displaytag</groupId> <artifactId>displaytag</artifactId> 
				<version>${displaytag.version}</version> <exclusions> <exclusion> <groupId>org.slf4j</groupId> 
				<artifactId>jcl104-over-slf4j</artifactId> </exclusion> </exclusions> </dependency> -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${project.servlet-apiVersion}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${project.jsp-apiVersion}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.tuckey</groupId>
				<artifactId>urlrewritefilter</artifactId>
				<version>${project.urlrewritefilterVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock</artifactId>
				<version>${project.jmockVersion}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit4</artifactId>
				<version>${project.jmockVersion}</version>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit-dep</artifactId>
					</exclusion>
				</exclusions>
				<scope>test</scope>
			</dependency>
			<!-- Upgrade junit-dep used by jmock The artifact junit:junit-dep:jar:4.11 
				has been relocated to junit:junit:jar:4.11 <dependency> <groupId>junit</groupId> 
				<artifactId>junit-dep</artifactId> <version>${project.junitVersion}</version> 
				<scope>test</scope> </dependency> -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${project.junitVersion}</version>
				<scope>test</scope>
			</dependency>
			<!-- <dependency> <groupId>org.subethamail</groupId> <artifactId>subethasmtp-wiser</artifactId> 
				<version>${project.wiserVersion}</version> <scope>test</scope> </dependency> -->
			<!-- for sitemesh -->

			<!-- for sitemesh end -->
			<!-- for jfreechar -->
			<dependency>
				<groupId>jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>1.0.13</version>
			</dependency>
			<dependency>
				<groupId>jfree</groupId>
				<artifactId>jcommon</artifactId>
				<version>1.0.16</version>
			</dependency>
			<!-- for jfreechar end -->
			<!-- for apache common configuration -->
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${project.commons-configurationVersion}</version>
				<!-- <exclusions> <exclusion> <groupId>commons-lang</groupId> <artifactId>commons-lang</artifactId> 
					</exclusion> </exclusions> -->
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${project.commons-beanutilsVersion}</version>
			</dependency>
			<dependency>
				<groupId>commons-jxpath</groupId>
				<artifactId>commons-jxpath</artifactId>
				<version>1.3</version>
			</dependency>
			<!-- for apache common configuration end -->

			<!-- for json included by struts <dependency> <groupId>net.sf.json-lib</groupId> 
				<artifactId>json-lib</artifactId> <version>2.4</version> <classifier>jdk15</classifier> 
				</dependency> for json end -->

			<!-- for jasperreport -->
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>${project.jasperreportsVersion}</version>
			</dependency>

			<!-- auto included <dependency> <groupId>commons-digester</groupId> <artifactId>commons-digester</artifactId> 
				<version>1.7</version> </dependency> <dependency> <groupId>commons-logging</groupId> 
				<artifactId>commons-logging</artifactId> <version>1.0.2</version> </dependency> -->
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${project.itextVersion}</version>
			</dependency>
			<dependency>
				<groupId>net.sourceforge.jexcelapi</groupId>
				<artifactId>jxl</artifactId>
				<version>${project.jxlVersion}</version>
			</dependency>
			<dependency>
				<groupId>com.keypoint</groupId>
				<artifactId>png-encoder</artifactId>
				<version>1.5</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${project.poiVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${project.groovy-allVersion}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-jasperreports-plugin</artifactId>
				<version>${project.strutsVersion}</version>
			</dependency>
			<!-- for jasperreport end -->
		</dependencies>
	</dependencyManagement>

    <dependencies>
        <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
            </dependency>
    </dependencies>

	<build>
		<defaultGoal>install</defaultGoal>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${project.versionsPluginVersion}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${project.surefirePluginVersion}</version>
					<configuration>
						<argLine>-Dfile.encoding=utf-8</argLine>
					</configuration>
				</plugin>
				
				<!-- clean-up previous hibernate-search indexed from integration tests, 
					as there could be a lock -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${project.cleanPluginVersion}</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>${user.home}/${project.build.finalName}/index</directory>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<!-- will package a ready-to-run app regarding hibernate-search index 
					location -->
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/main/webapp</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</testResource>
			<!-- include config files in main folder for testing -->
			<testResource>
				<directory>src/main/java</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/applicationContext*.xml</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/applicationContext*.xml</include>
				</includes>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>



	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${project.changePluginVersion}</version>
			</plugin>
			<!-- replaced by sonar <plugin> <artifactId>maven-checkstyle-plugin</artifactId> 
				<configuration> <consoleOutput>true</consoleOutput> <configLocation>https://raw.github.com/appfuse/appfuse/master/www/checkstyle.xml</configLocation> 
				<failsOnError>false</failsOnError> <maxAllowedViolations>3</maxAllowedViolations> 
				</configuration> <version>${project.checkstylePluginVersion}</version> </plugin> 
				<plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>cobertura-maven-plugin</artifactId> 
				<configuration> <instrumentation> <excludes> <exclude>**/model/*.class</exclude> 
				</excludes> </instrumentation> </configuration> <version>${project.coberturaPluginVersion}</version> 
				</plugin> <plugin> <artifactId>maven-javadoc-plugin</artifactId> <version>${project.javadocPluginVersion}</version> 
				</plugin> <plugin> <artifactId>maven-jxr-plugin</artifactId> <version>${project.jxrPluginVersion}</version> 
				</plugin> <plugin> <artifactId>maven-pmd-plugin</artifactId> <configuration> 
				<linkXRef>true</linkXRef> <targetJdk>${project.JavaVersion}</targetJdk> </configuration> 
				<version>${project.pmdPluginVersion}</version> </plugin> -->
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${project.surefireReportPluginVersion}</version>
				<configuration>
					<showSuccess>false</showSuccess>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>webtest-maven-plugin</artifactId>
				<version>1.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${project.versionsPluginVersion}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<modules>
		<module>CustomerSecurityManagementDAO</module>
		<module>CustomerSecurityManagementRules</module>
		<module>CustomerSecurityManagementService</module>
		<module>CustomerSecurityManagementWeb</module>
	</modules>
	
</project>